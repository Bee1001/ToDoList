{"version":3,"sources":["components/Header/header.js","components/ToDoForm/ToDoForm.js","components/ToDo/ToDo.js","components/ToDoList/ToDoList.js","components/Search/search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","ToDoForm","props","useState","task","level","completed","todo","setToDo","onSubmit","e","preventDefault","id","Date","now","toString","Math","random","substr","trim","addToDo","date","toDateString","type","name","value","onChange","target","ToDo","index","onClick","removeToDo","icon","faTrashAlt","ToDoList","elemToDo","todos","map","length","Search","searchInput","useRef","ref","placeholder","searchToDo","current","faSearch","App","setToDos","statusDisplay","setStatusDisplay","searchTerm","setSearchTerm","searchResult","setSearchResult","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","toDoForm","console","log","newToDos","filter","Object","values","join","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f52dc0e5.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nfunction Header() {\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-title\">\n                <span>To Do List</span>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './ToDoForm.css';\n\nfunction ToDoForm(props) {\n    const [ todo, setToDo ] = useState({ \n        task: '',\n        level: 0,\n        completed: false \n    });\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        const id = Date.now().toString(36) + Math.random().toString(36).substr(2);\n        if (todo.task.trim()) {\n            props.addToDo({...todo, id: id, date: new Date().toDateString() });\n\n            setToDo({ ...todo, task: '' })\n        }\n    }\n\n    return (\n        <div className=\"todo-form-container\">\n            <div className=\"todo-form-wrapper\">\n                <form className=\"todo-form\" onSubmit={ handleOnSubmit }>\n                    <div className=\"todo-form-input\">\n                        <label>Task</label>\n                        <input  \n                                type=\"text\"\n                                name=\"task\"\n                                value={ todo.task }\n                                onChange={ e => { setToDo({ ...todo, task: e.target.value }) } }\n                        ></input>\n                    </div>\n                    <div className=\"todo-form-input\">\n                        <label>Level</label>\n                        <select \n                            className=\"todo-form-select\" \n                            name=\"level\"\n                            value={ todo.level } \n                            onChange={ e => { setToDo({ ...todo, level: e.target.value }) } }>\n\n                            <option value={0}>Necessary</option>\n                            <option value={1}>Important</option>\n                        </select>\n                    </div>\n                    <button className=\"btn-add\" type=\"submit\">Add Task</button>\n                    <button className=\"btn-cancel\">Cancel</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport './ToDo.css';\n\nfunction ToDo(props) {\n    const handleRemoveToDo = () => {\n        props.removeToDo(props.id);\n    }\n\n    return (\n        <div className=\"todo-box\">\n            <div className=\"todo-index\">\n                <span>{props.index + 1}</span>\n            </div>\n            <div className=\"todo-content\">\n                <span>{props.task}</span>\n            </div>\n            <div className=\"todo-level\">\n               <span>{ props.level === 0 ? 'Necessary' : 'Important'}</span>\n            </div>\n            <div className=\"todo-time\">\n                <span>{ props.date }</span>\n            </div>\n            <div className=\"todo-action\">\n                <button className=\"btn-delete\" onClick={ handleRemoveToDo }>\n                    <FontAwesomeIcon icon={ faTrashAlt }/>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ToDo;\n","import React from 'react';\nimport ToDo from '../ToDo/ToDo';\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    const elemToDo = props.todos.map((todo, index) => {\n        return  <ToDo \n                    key={ todo.id } \n                    id={ todo.id } \n                    index={ index } \n                    task={ todo.task } \n                    level={ todo.level } \n                    date ={ todo.date }\n                    removeToDo={ props.removeToDo }\n                />\n    })\n    return (\n        <div className=\"todo-list-container\">\n            <div className=\"todo-list-wrapper\">\n                { elemToDo.length ? elemToDo : 'No task available' }\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoList;\n","import React, { useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport './search.css'\n\nfunction Search(props) {\n    const searchInput = useRef('');\n    const handleSearch = () => {\n        props.searchToDo(searchInput.current.value);\n    }\n\n    return (\n        <div className=\"search-container\">\n            <form className=\"search-form\">\n                <input \n                    ref={ searchInput }\n                    className=\"search\" \n                    placeholder=\"Search here...\" \n                    onChange={ handleSearch }\n                ></input>\n                <button className=\"btn-search\">\n                    <FontAwesomeIcon icon={ faSearch } />\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header/header';\nimport ToDoForm from './components/ToDoForm/ToDoForm';\nimport ToDoList from './components/ToDoList/ToDoList';\nimport Search from './components/Search/search';\n\nfunction App() {\n    const [ todos, setToDos ] = useState([]);\n    const [ statusDisplay, setStatusDisplay] = useState(false);\n    const [ searchTerm, setSearchTerm ] = useState('');\n    const [ searchResult, setSearchResult ] = useState([]);\n    \n    useEffect(() => {\n        const storageTodos = JSON.parse(localStorage.getItem('todo-list'));\n        if (storageTodos) {\n            setToDos(storageTodos);\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('todo-list', JSON.stringify(todos));\n    }, [todos])\n\n    const addToDo = (todo) => {\n        setToDos([todo, ...todos]);\n    }\n\n    const removeToDo = (id) => {\n        setToDos(todos.filter(todo => todo.id !== id))\n    }\n\n    const searchToDo = (searchTerm) => {\n        console.log(searchTerm);\n        setSearchTerm(searchTerm);\n        if(searchTerm !== '') {\n            const newToDos = todos.filter(todo => {\n                return Object.values(todo)\n                    .join(' ')\n                    .toLowerCase()\n                    .includes(searchTerm.toLowerCase());\n            })\n            setSearchResult(newToDos);\n        } else {\n            return todos;\n        }\n\n    }\n\n    const onToggleForm = () => {\n        setStatusDisplay(!statusDisplay);\n    }\n    let toDoForm = statusDisplay === true ? <ToDoForm addToDo={ addToDo }/> : '';\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"taskheader-container\">\n                <div className=\"taskheader-wrapper\">\n                    <div className=\"control-container\">\n                        <button className=\"btn-add\" \n                                onClick={ onToggleForm }\n                        >Add task</button>\n                    </div>\n                    <Search searchToDo={ searchToDo }/>\n                </div>\n            </div>\n            { toDoForm }\n            <ToDoList todos={ searchTerm < 1 ? todos : searchResult } removeToDo={ removeToDo }/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}